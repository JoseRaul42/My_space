@inject IJSRuntime JSRuntime
@implements IAsyncDisposable

<div id="@_containerId" class="shader-canvas"></div>

@code {
    private string _containerId = $"shader-container-{Guid.NewGuid():N}";
    private IJSObjectReference? _module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                _module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./_content/personalBlogstylesite.Shared/js/scene.js");
                await _module.InvokeVoidAsync("init", _containerId);
            }
            catch (Exception ex)
            {
                Console.WriteLine($"Error initializing 3D scene: {ex.Message}");
            }
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (_module is not null)
        {
            await _module.DisposeAsync();
        }
    }
}
