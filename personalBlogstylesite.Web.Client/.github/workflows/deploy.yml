name: Deploy Blazor WASM to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  DOTNET_VERSION: '9.0.x'   # set to 8.0.x if project targets .NET 8
  BASE_PATH: /${{ github.event.repository.name }}/

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Determine WASM project path
        id: detect
        shell: bash
        run: |
          # Prefer known client path if it exists:
          if [ -f "./personalBlogstylesite.Web.Client/personalBlogstylesite.Web.Client.csproj" ]; then
            echo "path=./personalBlogstylesite.Web.Client/personalBlogstylesite.Web.Client.csproj" >> $GITHUB_OUTPUT
            exit 0
          fi
          # Auto-detect first Blazor WASM project
          DETECTED=$(grep -rl 'Microsoft.NET.Sdk.BlazorWebAssembly' --include='*.csproj' || true)
          if [ -n "$DETECTED" ]; then
            FIRST=$(echo "$DETECTED" | head -n 1)
            echo "path=$FIRST" >> $GITHUB_OUTPUT
            exit 0
          fi
          # Fallback: first .csproj (may fail later if not WASM)
          FIRST_CSProj=$(git ls-files '*.csproj' | head -n 1)
          if [ -n "$FIRST_CSProj" ]; then
            echo "path=$FIRST_CSProj" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "No .csproj found." >&2
          exit 1

      - name: Publish WASM (Release)
        run: |
          dotnet publish "${{ steps.detect.outputs.path }}" -c Release -o publish

      - name: Prepare Pages artifact (set base href, SPA fallback, nojekyll)
        run: |
          # Typical publish output for WASM
          DIST="publish/wwwroot"
          # Some SDK layouts (older/newer) may differ; attempt fallback:
          if [ ! -d "$DIST" ]; then
            CANDIDATE=$(ls -d publish/**/browser-wasm/AppBundle 2>/dev/null | head -n 1 || true)
            if [ -n "$CANDIDATE" ]; then DIST="$CANDIDATE"; fi
          fi
          echo "DIST is $DIST"
          test -d "$DIST" || (echo "Publish output not found" && exit 1)

          # 1) update base href
          if grep -q '<base href="/"' "$DIST/index.html"; then
            sed -i 's|<base href="/"|<base href="'"$BASE_PATH"'"|' "$DIST/index.html"
          else
            # If base tag differs, try a more general replacement or insert one in <head>
            sed -i '0,/<head>/s//<head>\n    <base href="'"$BASE_PATH"'" \/>/' "$DIST/index.html"
          fi

          # 2) SPA fallback
          cp "$DIST/index.html" "$DIST/404.html"

          # 3) disable Jekyll
          touch "$DIST/.nojekyll"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: publish/wwwroot

  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
